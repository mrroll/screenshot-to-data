/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: {
    'DateTimeISO': unknown;
    'JSON': unknown;
    'SafeInt': unknown;
    'Void': unknown;
    'Health': { kind: 'OBJECT'; name: 'Health'; fields: { 'Ollama': { name: 'Ollama'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'String': unknown;
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'Health': { name: 'Health'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Health'; ofType: null; }; } }; 'Screenshot': { name: 'Screenshot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Screenshot'; ofType: null; }; } }; 'Screenshots': { name: 'Screenshots'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Screenshot'; ofType: null; }; }; }; } }; 'CurrentUser': { name: 'CurrentUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; }; };
    'Int': unknown;
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'Health': { name: 'Health'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Health'; ofType: null; }; } }; 'Lock': { name: 'Lock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Lock'; ofType: null; }; } }; 'LockRemove': { name: 'LockRemove'; type: { kind: 'SCALAR'; name: 'Void'; ofType: null; } }; 'S3SignedURLs': { name: 'S3SignedURLs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'S3SignedURLsOutput'; ofType: null; }; }; }; } }; 'CurrentUser': { name: 'CurrentUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CurrentUserMutationOutput'; ofType: null; }; } }; }; };
    'Boolean': unknown;
    'Lock': { kind: 'OBJECT'; name: 'Lock'; fields: { 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'owner': { name: 'owner'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ttl': { name: 'ttl'; type: { kind: 'SCALAR'; name: 'SafeInt'; ofType: null; } }; 'expirationTime': { name: 'expirationTime'; type: { kind: 'SCALAR'; name: 'SafeInt'; ofType: null; } }; }; };
    'S3SignedURLsInput': { kind: 'INPUT_OBJECT'; name: 'S3SignedURLsInput'; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'S3SignedURLsOutput': { kind: 'OBJECT'; name: 'S3SignedURLsOutput'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'URL': { name: 'URL'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'exists': { name: 'exists'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'Screenshot': { kind: 'OBJECT'; name: 'Screenshot'; fields: { 'CUID2': { name: 'CUID2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'S3Filename': { name: 'S3Filename'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'OriginalFilename': { name: 'OriginalFilename'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'Description': { name: 'Description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'S3URL': { name: 'S3URL'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'Width': { name: 'Width'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'Height': { name: 'Height'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'CreatedAt': { name: 'CreatedAt'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'UpdatedAt': { name: 'UpdatedAt'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'instance_id': { name: 'instance_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'aud': { name: 'aud'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'encrypted_password': { name: 'encrypted_password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email_confirmed_at': { name: 'email_confirmed_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'invited_at': { name: 'invited_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'confirmation_token': { name: 'confirmation_token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'confirmation_sent_at': { name: 'confirmation_sent_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'recovery_token': { name: 'recovery_token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recovery_sent_at': { name: 'recovery_sent_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'email_change_token_new': { name: 'email_change_token_new'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email_change': { name: 'email_change'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email_change_sent_at': { name: 'email_change_sent_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'last_sign_in_at': { name: 'last_sign_in_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'raw_app_meta_data': { name: 'raw_app_meta_data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'raw_user_meta_data': { name: 'raw_user_meta_data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'is_super_admin': { name: 'is_super_admin'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'updated_at': { name: 'updated_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone_confirmed_at': { name: 'phone_confirmed_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'phone_change': { name: 'phone_change'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone_change_token': { name: 'phone_change_token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'phone_change_sent_at': { name: 'phone_change_sent_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'confirmed_at': { name: 'confirmed_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'email_change_token_current': { name: 'email_change_token_current'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email_change_confirm_status': { name: 'email_change_confirm_status'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'banned_until': { name: 'banned_until'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'reauthentication_token': { name: 'reauthentication_token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reauthentication_sent_at': { name: 'reauthentication_sent_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'is_sso_user': { name: 'is_sso_user'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deleted_at': { name: 'deleted_at'; type: { kind: 'SCALAR'; name: 'DateTimeISO'; ofType: null; } }; 'is_anonymous': { name: 'is_anonymous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'user_preference': { name: 'user_preference'; type: { kind: 'OBJECT'; name: 'UserPreference'; ofType: null; } }; 'screenshot': { name: 'screenshot'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Screenshot'; ofType: null; }; } }; }; };
    'UserPreference': { kind: 'OBJECT'; name: 'UserPreference'; fields: { 'CUID2': { name: 'CUID2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'Prompt': { name: 'Prompt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'UserPreferenceInput': { kind: 'INPUT_OBJECT'; name: 'UserPreferenceInput'; inputFields: [{ name: 'Prompt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CurrentUserMutationOutput': { kind: 'OBJECT'; name: 'CurrentUserMutationOutput'; fields: { 'user_preference': { name: 'user_preference'; type: { kind: 'OBJECT'; name: 'UserPreference'; ofType: null; } }; }; };
  };
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}